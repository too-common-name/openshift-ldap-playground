apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: openldap-template
  annotations:
    description: "Template to deploy OpenLDAP with required resources"
parameters:
  - name: OPENLDAP_NAMESPACE
    displayName: "OpenLDAP Namespace"
    required: true
objects:
  # Namespace
  - kind: Project
    apiVersion: v1
    metadata:
      name: ${OPENLDAP_NAMESPACE}

  # Secrets
  - kind: Secret
    apiVersion: v1
    data:
      LDAP_ADMIN_PASSWORD: YWRtaW4xMjM= # notsecret
    metadata:
      name: ldap-admin-pwd
      namespace: ${OPENLDAP_NAMESPACE}

  - kind: Secret
    apiVersion: v1
    data:
      LDAP_READONLY_USER_PASSWORD: cmVhZG9ubHkxMjM= # notsecret
    metadata:
      name: ldap-readonly-pwd
      namespace: ${OPENLDAP_NAMESPACE}

  # ConfigMap
  - kind: ConfigMap
    apiVersion: v1
    data:
      LDAP_BASE_DN: dc=wayneenterprises,dc=org
      LDAP_DOMAIN: wayneenterprises.org
      LDAP_READONLY_USER: "true"
    metadata:
      name: ldap-conf
      namespace: ${OPENLDAP_NAMESPACE}

  # ServiceAccount
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: openldap
      namespace: ${OPENLDAP_NAMESPACE}

  # RoleBinding
  - kind: RoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: openldap
      namespace: ${OPENLDAP_NAMESPACE}
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:openshift:scc:anyuid
    subjects:
    - kind: ServiceAccount
      name: openldap
      namespace: ${OPENLDAP_NAMESPACE}

  # Deployment
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: openldap
      namespace: ${OPENLDAP_NAMESPACE}
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          deployment: openldap
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          labels:
            deployment: openldap
        spec:
          containers:
          - name: openldap
            image: docker.io/osixia/openldap@sha256:11a30708d9224291c39b2eed1d2620eb9687f4b8411e3b9dac6362ff634794c2
            imagePullPolicy: IfNotPresent
            ports:
            - containerPort: 389
              protocol: TCP
            - containerPort: 636
              protocol: TCP
            env:
            - name: LDAP_BASE_DN
              valueFrom:
                configMapKeyRef:
                  name: ldap-conf
                  key: LDAP_BASE_DN
            - name: LDAP_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: ldap-conf
                  key: LDAP_DOMAIN
            - name: LDAP_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ldap-admin-pwd
                  key: LDAP_ADMIN_PASSWORD
            - name: LDAP_READONLY_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ldap-readonly-pwd
                  key: LDAP_READONLY_USER_PASSWORD
            - name: LDAP_READONLY_USER
              valueFrom:
                configMapKeyRef:
                  name: ldap-conf
                  key: LDAP_READONLY_USER
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          restartPolicy: Always
          serviceAccountName: openldap
          terminationGracePeriodSeconds: 30

  # Service
  - apiVersion: v1
    kind: Service
    metadata:
      name: openldap-service
      namespace: ${OPENLDAP_NAMESPACE}
    spec:
      ports:
      - name: 389-tcp
        port: 389
        protocol: TCP
        targetPort: 389
      - name: 636-tcp
        port: 636
        protocol: TCP
        targetPort: 636
      selector:
        deployment: openldap
      type: ClusterIP
